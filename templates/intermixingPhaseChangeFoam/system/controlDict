/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v1812                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

application     interMixingFoam;

startFrom       latestTime;

startTime       0;

stopAt          endTime;

endTime         0.3;

deltaT          1e-08;

writeControl    adjustableRunTime;

writeInterval   0.005;

purgeWrite      0;

writeFormat     ascii;

writePrecision  6;

writeCompression on;

timeFormat      general;

timePrecision   6;

runTimeModifiable yes;

adjustTimeStep  yes;

maxCo           0.5;
maxAlphaCo      0.5;

maxDeltaT       1;

functions
{

probes
{
    type            probes;
    libs            (sampling);

    // Name of the directory for probe data
    name            probes;

    // Write at same frequency as fields
    writeControl    timeStep;
    writeInterval   5;

    // Fields to be probed
    fields          (p);

    // Optional: do not recalculate cells if mesh moves
    fixedLocations  false;

    // Optional: interpolation scheme to use (default is cell)
    interpolationScheme cellPoint;

    probeLocations
    (
        ( 0.102 0.02 0 )      // at inlet
        ( 0.132 0.02 0 )      // at inlet
    );

    // Optional: filter out points that haven't been found. Default
    //           is to include them (with value -VGREAT)
    includeOutOfBounds  true;
}

     Forces

     {

         type forces;

         functionObjectLibs ("libforces.so");

         patches (model);

         log true;

         rho rhoInf;

         rhoInf 1000;

         CofR (0 0 0);

         liftDir (0 1 0);

         dragDir (1 0 0);

         writeControl    timeStep;

         writeInterval   5;

     }

     forceCoeffs

     {

         type forceCoeffs;

         functionObjectLibs ("libforces.so");

         patches (model);

         log true;

         rho rhoInf;

         rhoInf 1000;

         CofR (0 0 0);

         liftDir (0 1 0);

         dragDir (1 0 0);

         pitchAxis (0 0 1);

         magUInf 8.07;

         lRef 0.335;

         Aref 0.0134;

         writeControl    timeStep;

         writeInterval   5;

     }

    fieldAverage1
    {
        type            fieldAverage;
        functionObjectLibs ( "libfieldFunctionObjects.so" );
        enabled         true;
        outputControl   outputTime;
        cleanRestart        true;
        timeStart             0;
        fields
        (
            U
            {
                mean        on;
                prime2Mean  off;
                base        time;
            }

            p_rgh
            {
                mean        on;
                prime2Mean  off;
                base        time;
            }
            alpha.water
            {
                mean        on;
                prime2Mean  off;
                base        time;
            }
        );
        }

}
// ************************************************************************* //
